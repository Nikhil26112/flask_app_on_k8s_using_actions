name: CI/CD Pipeline for Flask App

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment: AWS_creds
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v3
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Authenticate Docker to ECR
      run: |
        aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin ${{ secrets.AWS_ECR_URL }}

    - name: Build and push Docker image
      run: |
        docker build  --no-cache -t flask-app .
        docker tag flask-app:latest ${{ secrets.AWS_ECR_URL }}/flask-app:latest
        docker push ${{ secrets.AWS_ECR_URL }}/flask-app:latest

    - name: Install Helm
      run: |
        curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash

    - name: Update kubeconfig
      run: |
        aws eks update-kubeconfig --name interesting-synth-ant --region us-east-1

    - name: Create ECR imagePullSecret in Kubernetes
      run: |
        kubectl create secret docker-registry ecr-secret \
          --docker-server=${{ secrets.AWS_ECR_URL }} \
          --docker-username=AWS \
          --docker-password=$(aws ecr get-login-password --region us-east-1) \
          --namespace default || echo "Secret already exists"

    - name: Deploy using Helm
      run: |
        helm upgrade --install flask-app ./flask-app --namespace default